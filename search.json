[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rate Stabilizing Toolbox (RSTbx) ",
    "section": "",
    "text": "Generate reliable, local-level age-standardized measures of chronic disease within ArcGIS Pro.\nWant to explore additional Conditional Autoregressive (CAR) models? Check out the RSTr package.\n\n\n\nDownload the latest release’s zip file\nUnzip the zip file\nOpen ArcGIS Pro. Create a new Map Project. Within the Catalog Pane, right click on thse Toolboxes and Add Toolbox.\n\n\n\n\nThe RSTbx was designed to be a comprehensive suite of tools that allow you to easily generate small area estimates based off of complete data (e.g. not survey data). These tools were designed to work in sequential order (See flowchart below).\n\n\n\n\n\n\n\nRetrieving data from the Census can be hard. The CDR aims to simplify that process by doing it for you! Simply specify the survey/census of interest and the geographic unit and the CDR will generate a (optionally, age-stratified) total population table. The CDR can also optionally download Census TIGER or cartographic boundaries.\n\n\n\nIt is often the case that your data is collected at the individual level. These data will be need to be aggregated to the region (and age group, for age standardized rates) for rate calculations within the Rate Stabilizing Tool. This tool was developed to make that process easier!\n\n\n\nThe RST offers an easy-to-use interface for the restricted univariate conditional autoregressive (UCAR) model. With the RST, you can generate small area estimates, credible intervals for those estimates, and the maximum credible levels at which these estimates would be considered reliable.\n\n\n\n\nEncounter a bug or have an idea for a feature? Open an Github issue.\nHave additional questions? Send us an email at cehi@uic.edu."
  },
  {
    "objectID": "index.html#set-up",
    "href": "index.html#set-up",
    "title": "Rate Stabilizing Toolbox (RSTbx) ",
    "section": "",
    "text": "Download the latest release’s zip file\nUnzip the zip file\nOpen ArcGIS Pro. Create a new Map Project. Within the Catalog Pane, right click on thse Toolboxes and Add Toolbox."
  },
  {
    "objectID": "index.html#tools",
    "href": "index.html#tools",
    "title": "Rate Stabilizing Toolbox (RSTbx) ",
    "section": "",
    "text": "The RSTbx was designed to be a comprehensive suite of tools that allow you to easily generate small area estimates based off of complete data (e.g. not survey data). These tools were designed to work in sequential order (See flowchart below).\n\n\n\n\n\n\n\nRetrieving data from the Census can be hard. The CDR aims to simplify that process by doing it for you! Simply specify the survey/census of interest and the geographic unit and the CDR will generate a (optionally, age-stratified) total population table. The CDR can also optionally download Census TIGER or cartographic boundaries.\n\n\n\nIt is often the case that your data is collected at the individual level. These data will be need to be aggregated to the region (and age group, for age standardized rates) for rate calculations within the Rate Stabilizing Tool. This tool was developed to make that process easier!\n\n\n\nThe RST offers an easy-to-use interface for the restricted univariate conditional autoregressive (UCAR) model. With the RST, you can generate small area estimates, credible intervals for those estimates, and the maximum credible levels at which these estimates would be considered reliable."
  },
  {
    "objectID": "index.html#contact-us",
    "href": "index.html#contact-us",
    "title": "Rate Stabilizing Toolbox (RSTbx) ",
    "section": "",
    "text": "Encounter a bug or have an idea for a feature? Open an Github issue.\nHave additional questions? Send us an email at cehi@uic.edu."
  },
  {
    "objectID": "reference/CDR.html",
    "href": "reference/CDR.html",
    "title": "Census Data Retriever",
    "section": "",
    "text": "Retrieving data from the Census can be hard. The CDR aims to simplify that process by doing it for you! Simply specify the survey/census of interest and the geographic unit and the CDR will generate a (optionally, age-stratified) total population table. The CDR can also optionally download Census TIGER or cartographic boundaries.\n\n\n\n\nAge Stratified : checkbox\n\nShould the output table be stratified by age group?\n\n\n\n\n\n\nSurvey : string = 5-year ACS | Decennial\n\nName of survey/census used to produce the output population table.\n\nYear : string\n\nYear/year(s) of specified Survey.\n\nGeography : string = County | Tract\n\nGeographic unit for which to generate the output population table.\n\nState : string\n\nState to generate the output population table for.\n\n\n\n\nOutput Table : table path\n\nPath of the output population table.\n\nGeometry Type : string = TIGER | Cartographic\n\nType of boundary file to retrieve.\n\nOutput Feature : feature path\n\nPath of output boundary file.\n\n\n\n\n\n\nScenario 1: I want to download an age stratified county population table from 2015-2019 ACS data for the state of Illinois.\n\nAge Stratified: Checked\nRequest Parameters:\n\nSurvey: 5-year ACS\nYear: 2015-2019\nGeography: County\nState: Illinois\n\nOutput Table: some_project.gdb/population_table\nGeometry Type: Leave blank\nOutput Feature: Leave blank\n\nScenario 2: I want to download tract total population table from the 2020 decennial census data for the state of North Carolina. I also want to download a TIGER North Caroline tract boundary file.\n\nAge Stratified: Unchecked\nRequest Parameters:\n\nSurvey: Decennial\nYear: 2020\nGeography: Tract\nState: North Carolina\n\nOutput Table: some_project.gdb/population_table\nGeometry Type: TIGER\nOutput Feature: some_project.gdb/boundaries"
  },
  {
    "objectID": "reference/CDR.html#parameters",
    "href": "reference/CDR.html#parameters",
    "title": "Census Data Retriever",
    "section": "",
    "text": "Age Stratified : checkbox\n\nShould the output table be stratified by age group?\n\n\n\n\n\n\nSurvey : string = 5-year ACS | Decennial\n\nName of survey/census used to produce the output population table.\n\nYear : string\n\nYear/year(s) of specified Survey.\n\nGeography : string = County | Tract\n\nGeographic unit for which to generate the output population table.\n\nState : string\n\nState to generate the output population table for.\n\n\n\n\nOutput Table : table path\n\nPath of the output population table.\n\nGeometry Type : string = TIGER | Cartographic\n\nType of boundary file to retrieve.\n\nOutput Feature : feature path\n\nPath of output boundary file."
  },
  {
    "objectID": "reference/CDR.html#examples",
    "href": "reference/CDR.html#examples",
    "title": "Census Data Retriever",
    "section": "",
    "text": "Scenario 1: I want to download an age stratified county population table from 2015-2019 ACS data for the state of Illinois.\n\nAge Stratified: Checked\nRequest Parameters:\n\nSurvey: 5-year ACS\nYear: 2015-2019\nGeography: County\nState: Illinois\n\nOutput Table: some_project.gdb/population_table\nGeometry Type: Leave blank\nOutput Feature: Leave blank\n\nScenario 2: I want to download tract total population table from the 2020 decennial census data for the state of North Carolina. I also want to download a TIGER North Caroline tract boundary file.\n\nAge Stratified: Unchecked\nRequest Parameters:\n\nSurvey: Decennial\nYear: 2020\nGeography: Tract\nState: North Carolina\n\nOutput Table: some_project.gdb/population_table\nGeometry Type: TIGER\nOutput Feature: some_project.gdb/boundaries"
  },
  {
    "objectID": "reference/RST.html",
    "href": "reference/RST.html",
    "title": "Rate Stabilizing Tool",
    "section": "",
    "text": "The RST offers an easy-to-use interface for the restricted univariate conditional autoregressive (UCAR) model. With the RST, you can generate small area estimates, credible intervals for those estimates, and the maximum credible levels at which these estimates would be considered reliable.\n\n\n\n\nInput Table : table path\n\nTable with one record for each Region ID OR one record for each Region ID and Age Group combination. Table must include two additional columns, which specify the Event Count and Population Count for each Region ID OR Region ID and Age Group combination.\nTable can easily be generated using the Individual Data Processor.\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\nEvent Count : field name\n\nName of column which contains the number of events in each region OR region-age group combination.\n\nPopulation Count : field name\n\nName of column which contains the population of each region OR region-age group combination.\n\n\n\n\nInput Feature : feature path\n\nBoundary file which contains one record for each Region ID.\n\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\n\n\n\nCredible Level : double = 0.9 | 0.95 | 0.99\n\nCredible level at which credible intervals should be generated for.\n\nPer : integer\n\nOutput rate denominator (i.e. per 100,000).\n\nOutput Table : string\n\nPath of the output table which contains the stabilized rates.\n\nAge Group Field : string\n\nName of column within the Input Table which specifies age groups.\nThe following are valid age groups: “0-4”, “5-14”, “15-24”, “25-34”, “35-44”, “45-54”, “55-64”, “65-74”, “75-84”, “85up”.\n\nStandard Population Year : string = 2000 | 2010\n\nThe reference year of the standard population used to compute age-adjusted rates.\n\n\n\n\n\n\n\nLower age group : array of strings\n\nOne or more lower bounds defining the age ranges to include in age standardization. For example, to specify age ranges 35 and older, and 45 to 64, use “35” and “45”.\n\nUpper age group : array of strings\n\nOne or more upper bounds defining the age ranges to include in age standardization. For example, to specify age ranges 35 and older, and 45 to 64, use “up” and “64”.\n\n\n\n\n\n\n\nScenario 1: I want to generate crude rates per 100,000 with credible intervals at the 0.95 credible level for some Michigan event data I have. I already took that data and ran it through the Individual Data Processor. You can find it as MI_mort_pop within data.gdb.\n\nInput Table: data.gdb/MI_mort_pop\nInput Table Fields:\n\nRegion ID: GEOID\nEvent Count: MortalityCount\nPopulation Count: PopulationCount\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nCredible Level: 0.95\nPer: 100,000\nOutput Table: some_project.gdb/crude_rates\nAge Group Field: Leave blank\nStandard Population Year: Leave blank\nStandardized Age Groups:\n\nLower age group: Leave blank\nUpper age group: Leave blank\n\n\nScenario 2: I want to generate age-adjusted rates for the age ranges of 35 and 64, 64 and up, and 34 and up. I want these rates to be per 100,000 with credible intervals at the 0.95 credible level for some Michigan event data I have. I already took that data and ran it through the Individual Data Processor. You can find it as MI_mort_pop_grouped within data.gdb.\n\nInput Table: data.gdb/MI_mort_pop_grouped\nInput Table Fields:\n\nRegion ID: GEOID\nEvent Count: MortalityCount\nPopulation Count: PopulationCount\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nCredible Level: 0.95\nPer: 100,000\nOutput Table: some_project.gdb/age_adj_rates\nAge Group Field: AgeGroup\nStandard Population Year: 2010\nStandardized Age Groups:\n\nLower age group: 35, 64, 34\nUpper age group: 64, up, up"
  },
  {
    "objectID": "reference/RST.html#parameters",
    "href": "reference/RST.html#parameters",
    "title": "Rate Stabilizing Tool",
    "section": "",
    "text": "Input Table : table path\n\nTable with one record for each Region ID OR one record for each Region ID and Age Group combination. Table must include two additional columns, which specify the Event Count and Population Count for each Region ID OR Region ID and Age Group combination.\nTable can easily be generated using the Individual Data Processor.\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\nEvent Count : field name\n\nName of column which contains the number of events in each region OR region-age group combination.\n\nPopulation Count : field name\n\nName of column which contains the population of each region OR region-age group combination.\n\n\n\n\nInput Feature : feature path\n\nBoundary file which contains one record for each Region ID.\n\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\n\n\n\nCredible Level : double = 0.9 | 0.95 | 0.99\n\nCredible level at which credible intervals should be generated for.\n\nPer : integer\n\nOutput rate denominator (i.e. per 100,000).\n\nOutput Table : string\n\nPath of the output table which contains the stabilized rates.\n\nAge Group Field : string\n\nName of column within the Input Table which specifies age groups.\nThe following are valid age groups: “0-4”, “5-14”, “15-24”, “25-34”, “35-44”, “45-54”, “55-64”, “65-74”, “75-84”, “85up”.\n\nStandard Population Year : string = 2000 | 2010\n\nThe reference year of the standard population used to compute age-adjusted rates.\n\n\n\n\n\n\n\nLower age group : array of strings\n\nOne or more lower bounds defining the age ranges to include in age standardization. For example, to specify age ranges 35 and older, and 45 to 64, use “35” and “45”.\n\nUpper age group : array of strings\n\nOne or more upper bounds defining the age ranges to include in age standardization. For example, to specify age ranges 35 and older, and 45 to 64, use “up” and “64”."
  },
  {
    "objectID": "reference/RST.html#examples",
    "href": "reference/RST.html#examples",
    "title": "Rate Stabilizing Tool",
    "section": "",
    "text": "Scenario 1: I want to generate crude rates per 100,000 with credible intervals at the 0.95 credible level for some Michigan event data I have. I already took that data and ran it through the Individual Data Processor. You can find it as MI_mort_pop within data.gdb.\n\nInput Table: data.gdb/MI_mort_pop\nInput Table Fields:\n\nRegion ID: GEOID\nEvent Count: MortalityCount\nPopulation Count: PopulationCount\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nCredible Level: 0.95\nPer: 100,000\nOutput Table: some_project.gdb/crude_rates\nAge Group Field: Leave blank\nStandard Population Year: Leave blank\nStandardized Age Groups:\n\nLower age group: Leave blank\nUpper age group: Leave blank\n\n\nScenario 2: I want to generate age-adjusted rates for the age ranges of 35 and 64, 64 and up, and 34 and up. I want these rates to be per 100,000 with credible intervals at the 0.95 credible level for some Michigan event data I have. I already took that data and ran it through the Individual Data Processor. You can find it as MI_mort_pop_grouped within data.gdb.\n\nInput Table: data.gdb/MI_mort_pop_grouped\nInput Table Fields:\n\nRegion ID: GEOID\nEvent Count: MortalityCount\nPopulation Count: PopulationCount\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nCredible Level: 0.95\nPer: 100,000\nOutput Table: some_project.gdb/age_adj_rates\nAge Group Field: AgeGroup\nStandard Population Year: 2010\nStandardized Age Groups:\n\nLower age group: 35, 64, 34\nUpper age group: 64, up, up"
  },
  {
    "objectID": "tutorial/indiv_event_data.html",
    "href": "tutorial/indiv_event_data.html",
    "title": "2a. Preparing Individual-Level Event Data",
    "section": "",
    "text": "The second step of any RSTbx workflow is to prepare your event data. For individual- level event data, this means aggregating the data to the region or (region-age group combination) and joining that data with the population table we acquired earlier.\nLuckly, the Individual Data Processor can do both of those things for us!"
  },
  {
    "objectID": "tutorial/indiv_event_data.html#requirements",
    "href": "tutorial/indiv_event_data.html#requirements",
    "title": "2a. Preparing Individual-Level Event Data",
    "section": "Requirements",
    "text": "Requirements\n\nEvent Tables\nIndividual-level event tables should be formated to have one record (aka row) for each event that occured. If crude-rates are needed, only one column is truly necessary within table: the region identifier. It would look something like:\n\n\n\n\nGEOID\n\n\n\n\n01001\n\n\n01001\n\n\n01003\n\n\n…\n\n\n72149\n\n\n72149\n\n\n72149\n\n\n\n\nIf you would like to produce age-adjusted rates, an additional age column is necessary. Like this:\n\n\n\n\nGEOID\nAge\n\n\n\n\n01001\n23\n\n\n01001\n58\n\n\n01003\n4\n\n\n…\n…\n\n\n72149\n87\n\n\n72149\n65\n\n\n72149\n56\n\n\n\n\n(Also see mi_mort_indiv)"
  },
  {
    "objectID": "tutorial/indiv_event_data.html#individual-data-processor",
    "href": "tutorial/indiv_event_data.html#individual-data-processor",
    "title": "2a. Preparing Individual-Level Event Data",
    "section": "Individual Data Processor",
    "text": "Individual Data Processor\n\nProducing crude rates\nIn order to create our crude rates, we will need an un-stratified aggregate event and population table. Let’s create one using the non-age stratified population table in data.gdb (mi_pop) and the simulated individual-level event data in data.gdb (mi_mort_indiv).\nIf you haven’t already, download and extract the latest release of the RSTbx.\n\nOpen up ArcGIS Pro and create a new Map Project.\nOpen up the Catalog Pane.\nWithin the Catalog Pane, right click on Toolboxes and select Add Toolbox.\nNavigate to where you have downloaded and extracted the RSTbx and find the rate_stabilizing_toolbox.pyt.\nOpen up the Catalog Pane.\nRight click on Databases, select Add Database, and navigate to where you have downloaded and extracted the RSTbx and find data.gdb.\nWithin the data.gdb, right click on MI_carto, MI_mort_indiv, and MI_pop, and Add to Current Map.\nOpen the Individual Data Processor\nSet the following parameters and Run:\nAge Stratified: Unchecked (We only need total and event population numbers)\nInput Individual Data: mi_event_indiv\nInput Individual Data Fields:\n\nRegion ID: GEOID\nInput Population Data: MI_pop\nInput Population Data Fields:\n\nRegion ID: GEOID\n\nPopulation Count: PopulationCount\nInput Feature: MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\nOutput Table: mi_agg_joined\n\n\n\n\nProducing age-adjusted rates\nIn order to create our age-adjusted rates, we will need a stratified aggregate event and population table. Let’s create one using the age stratified population table in data.gdb (mi_pop_grouped) and the simulated individual-level event data in data.gdb (mi_mort_indiv).\n\nReturning back to the Individual Data Processor, set the following parameters and Run:\nAge Stratified: Checked\nInput Individual Data: mi_event_indiv\nInput Individual Data Fields:\n\nRegion ID: GEOID\n\nAge: Age\n\nInput Population Data: MI_pop_strat\nInput Population Data Fields:\n\nRegion ID: GEOID\n\nPopulation Count: PopulationCount\n\nAge Group: AgeGroup\n\nInput Feature: mi_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nOutput Table: mi_agg_joined_strat\n\nWe have seen how the Individual Data Processor can be used to prepare population data, but now we have to actually produce rates. If you are interested in using individual, record level event data, consider moving on to 3. Producing Stabilized Rates. If you are interested in using aggregate event data, consider also taking a look at 2b. Preparing Aggregate Event Data."
  },
  {
    "objectID": "tutorial/pop_data.html",
    "href": "tutorial/pop_data.html",
    "title": "1. Acquiring Population Data",
    "section": "",
    "text": "The first step in any RSTbx workflow is a boundary file and population data.\nLuckly, the Census Data Retriever can do both of those things for us!"
  },
  {
    "objectID": "tutorial/pop_data.html#requirements",
    "href": "tutorial/pop_data.html#requirements",
    "title": "1. Acquiring Population Data",
    "section": "Requirements",
    "text": "Requirements\n\nBoundary file\nThe RSTbx supports any geographic unit for which you can provide a boundary file for. Typically, people utilize Census boundary files for counties or tracts, which can be downloaded in TIGER or Cartographic forms from the Census website.\nThere are three requirements of these boundary files:\n\nThey should specify polygon/multipolygon boundaries.\nThere must be at least one column which must uniquely identify each region within the boundary file. These unique identifiers must be the same as those within the population table and the event table.\nThere should be no geographic regions within the boundary file which are not adjancent to at least one other area.\n\n\n\n\n\n\n\nNote\n\n\n\nUsing Census TIGER boundaries rather than cartographic boundaries will mitigate the concern of geographic units without any adjacent areas, because TIGER boundaries represent political boundaries which span over water.\n\n\n\n\nPopulation Tables\nPopulation tables can come in two formats depending on your eventual goals. If you would like to produce crude rates, then the table should have one record (row) for each region. It would look something like this:\n\n\n\n\nGEOID\nPopulationCount\n\n\n\n\n01001\n59285\n\n\n01003\n239945\n\n\n01005\n24757\n\n\n…\n…\n\n\n72149\n21778\n\n\n72151\n29868\n\n\n72153\n33509\n\n\n\n\n(Also see MI_pop within the data.gdb)\nIf you would like to produce age-adjusted rates, then the table should have one record for each region age-group combination. It would like something like this:\n\n\n\n\nGEOID\nAgeGroup\nPopulationCount\n\n\n\n\n01001\n0-4\n3430\n\n\n01001\n5-14\n7749\n\n\n01001\n15-24\n7339\n\n\n…\n…\n…\n\n\n72153\n65-74\n4527\n\n\n72153\n75-84\n3223\n\n\n72153\n85up\n571\n\n\n\n\n(Also see MI_pop_grouped within the data.gdb)\n\n\n\n\n\n\nImportant\n\n\n\nThe following are valid age groups: “0-4”, “5-14”, “15-24”, “25-34”, “35-44”, “45-54”, “55-64”, “65-74”, “75-84”, “85up”. Within the population table they must be written exactly how they are listed here (i.e., “85 and up” would not be a valid age group)."
  },
  {
    "objectID": "tutorial/pop_data.html#using-custom-data",
    "href": "tutorial/pop_data.html#using-custom-data",
    "title": "1. Acquiring Population Data",
    "section": "Using custom data",
    "text": "Using custom data\nBeing able to use custom data within the RSTbx is a great asset.\nOne potential use of custom data within the RSTbx is to calculate rates at custom geographic regions. For example, if I wanted to calculate the heart disease death rate at Texas Public Health Regions, I could use a custom boundary file and population table to do so!\nAnother potential use is to calculate group-specific rates. For example, if I desired to calculate the heart disease death rate for females, I could filter down my event data to just female deaths and use a custom population table with total female population.\n\n\n\n\n\n\nNote\n\n\n\nThe RSTr package has additional models which are more well suited to calculating group-specific rates. We encourage you to check the RSTr out if you are looking to calculating group-specific rates.\n\n\nAll the requirements above for your boundary file and population table will still hold even if you choose to use custom boundaries or population tables."
  },
  {
    "objectID": "tutorial/pop_data.html#census-data-retriever-cdr",
    "href": "tutorial/pop_data.html#census-data-retriever-cdr",
    "title": "1. Acquiring Population Data",
    "section": "Census Data Retriever (CDR)",
    "text": "Census Data Retriever (CDR)\n\n\n\n\n\n\nNote\n\n\n\nAll succeeding tutorials will rely on custom data provided within the data.gdb, but this tutorial will help you become familiar with the CDR. You will not use this data in any of the other tutorials.\n\n\nIf you are looking to generate rates at the county (or county-equivalent) or tract level, the Census Data Retriever can prepare your data for you.\nAs discussed above, two pieces of data must be acquired as part of the first step of an RSTbx workflow: a boundary file and a population file.\nOur eventual goal is to produce both crude and age-adjusted rates, so we will require a boundary file for both, a total population table, and an age-stratified table.\n\nProducing crude rates\nIn order to create our crude rates, we will need a total population table. Let’s create one for Michigan counties using the 2015-2019 5-year ACS.\nIf you haven’t already, download and extract the latest release of the RSTbx.\n\nOpen up ArcGIS Pro and create a new Map Project.\nOpen up the Catalog Pane.\nWithin the Catalog Pane, right click on Toolboxes and select Add Toolbox.\nNavigate to where you have downloaded and extracted the RSTbx and find the rate_stabilizing_toolbox.pyt.\nOpen the Census Data Retriever\nSet the following parameters and Run:\nAge-Stratified: Unchecked (We only need total population numbers)\nRequest Parameters:\n\nSurvey: 5-year ACS\n\nYear: 2015-2019\n\nGeography: County\n\nState: Michigan\n\nOutput Table: mi_county_acs1519_pop\n\n\n\nProducing age-adjusted rates\nNow that we have downloaded our total population table. We still require a age-stratified population table to calculate age-adjusted rates. Additionally, we still require boundaries. Fortunately, we can take care of both of these in one step.\n\nReturning back to the Census Data Retriever, set the following parameters:\nAge-Stratified: Checked (We want an age-stratified table)\nKeep all the Request Parameters the same:\n\nSurvey: 5-year ACS\n\nYear: 2015-2019\n\nGeography: County\n\nState: Michigan\n\nOutput Table: mi_county_acs1519_pop_grouped\nWe also want to download our boundaries, so open up the Geography dropdown.\nSet the Geometry Type to Cartographic and the Output Feature to mi_county_carto. Run.\n\nWe have seen how the Census Data Retriever can be used to prepare population data, but we still need to prepare our event data. If you are interested in using individual, record level event data, consider moving on to 2a. Preparing Individual-Level Event Data. If you are interested in using aggregate event data, consider moving on to 2b. Preparing Aggregate Event Data."
  },
  {
    "objectID": "tutorial/agg_event_data.html",
    "href": "tutorial/agg_event_data.html",
    "title": "2b. Preparing Aggregate Event Data",
    "section": "",
    "text": "The second step of any RSTbx workflow is to prepare your event data. For aggregate event data, this means joining the aggregate data with the population table we acquired earlier.\nThe RSTbx does not have its own tool to do this for you, but its easy in ArcGIS Pro!"
  },
  {
    "objectID": "tutorial/agg_event_data.html#requirements",
    "href": "tutorial/agg_event_data.html#requirements",
    "title": "2b. Preparing Aggregate Event Data",
    "section": "Requirements",
    "text": "Requirements\n\nEvent Tables\nAggregate event tables should be formated to have one record (aka row) for each region. It would look something like:\n\n\n\n\nGEOID\nEventCount\n\n\n\n\n01001\n3\n\n\n01003\n12\n\n\n01005\n0\n\n\n…\n…\n\n\n72149\n7\n\n\n72151\n10\n\n\n72153\n24\n\n\n\n\nIf you would like to produce age-adjusted rates, aggregate event tables should have one record (aka row) for reach region-age group combination. Like this:\n\n\n\n\nGEOID\nAgeGroup\nEventCount\n\n\n\n\n01001\n0-4\n0\n\n\n01001\n5-14\n1\n\n\n01001\n15-24\n0\n\n\n…\n…\n…\n\n\n72153\n65-74\n5\n\n\n72153\n75-84\n7\n\n\n72153\n85up\n9\n\n\n\n\n(Also see mi_mort_agg)\n\n\n\n\n\n\nImportant\n\n\n\nThe following are valid age groups: “0-4”, “5-14”, “15-24”, “25-34”, “35-44”, “45-54”, “55-64”, “65-74”, “75-84”, “85up”. Within the population table they must be written exactly how they are listed here (i.e., “85 and up” would not be a valid age group).\n\n\n\n\nProducing crude rates\nIn order to create our crude rates, we will need a total aggregate event and population table. Let’s create one using the total population table in data.gdb (mi_pop) and the aggregate total event data in data.gdb (mi_event_agg).\nIf you haven’t already, download and extract the latest release of the RSTbx.\n\nOpen up ArcGIS Pro and create a new Map Project.\nOpen up the Catalog Pane.\nWithin the Catalog Pane, right click on Toolboxes and select Add Toolbox.\n\nNavigate to where you have downloaded and extracted the RSTbx and find the rate_stabilizing_toolbox.pyt.\nYou should now see the RST’s three tools\n\nOpen up the Catalog Pane.\nRight click on Databases, select Add Database, and navigate to where you have downloaded and extracted the RSTbx and find data.gdb.\n\nWithin the data.gdb, right click on mi_carto, mi_event_agg, and mi_pop, and Add to Current Map.\nClick on Analysis within the main ribbon, click on Tools, and search for Make Query Table.\n\n\n\n\n\n\n\nNote\n\n\n\nMake Query Table is a powerful tool that can be used for many functions. In this case, we are preforming a simple one-to-one join. You could also perform this using the Add Join tool. We will use Make Query Table here to get you familiar with it before we preform a slightly more complex join for age-stratified tables.\n\n\nSet the population table (mi_pop) and the aggregate event table (mi_event_agg) as the Input Tables. Since we would like to join these two tables based on their region ID (aka GEOID), we must create an expression that checks if the region ID of a row in one table is equal to the other.\nWe would like our final table to only have three fields: GEOID, PopulationCount, and EventCount. From the Fields dropdown select mi_pop.GEOID, mi_pop.PopulationCount, and mi_event_agg.EventCount.\nUnder Expresssion set Where mi_event_agg.GEOID is equal to. Within the final dropdown you should see a list of GEOIDs and two radio buttons (Values and Fields). Select Fields. Open up the final dropdown again, and notice that the options have changed. Select mi_pop.GEOID. Your final expression should read Where mi_event_agg.GEOID is equal to mi_pop.GEOID.\nSet the Table Name as mi_agg_joined and Run.\n\n\n\nProducing age-adjusted rates\nIn order to create our age-adjusted rates, we will need an age stratified aggregate event and population table. Let’s create one using the age stratified population table in data.gdb (mi_pop_strat) and the aggregate age stratified event data in data.gdb (mi_event_agg_strat).\n\nReturn back to the Make Query Table tool. (Analysis -&gt; Tools -&gt; search for Make Query Table).\nSet the population table (mi_pop_strat) and the aggregate event table (mi_event_agg_strat) as the Input Tables.\nWe would like our final table to only have four fields: GEOID, AgeGroup, PopulationCount, and EventCount. From the Fields dropdown select mi_pop.GEOID, mi_pop.AgeGroup, mi_pop.PopulationCount, and mi_event_agg.EventCount.\nSince we would like to join these two tables based on their region ID (aka GEOID) AND their age group, we must create an expression that checks if BOTH the region ID and age group of a row in one table is equal to the other.\nUnder Expresssion set Where mi_pop_strat.GEOID is equal to. Within the final dropdown you should see a list of GEOIDs and two radio buttons (Values and Fields). Select Fields. Open up the final dropdown again, and notice that the options have changed. Select mi_event_agg_strat.GEOID.\nClick on Add Clause. Set the second sub-expression to be mi_pop_strat.AgeGroup is equal to. Again, within the last dropdown select the radio button for Fields, open the dropdown, and select mi_event_agg_strat.AgeGroup.\nYour final expression should be Where mi_pop_strat.GEOID is equal to mi_event_agg_strat.GEOID AND mi_pop_strat.AgeGroup is equal to mi_event_agg_strat.AgeGroup.\nSet the Table Name as mi_agg_joined_strat and Run.\n\n\nWe have seen how the Make Query Table can be used to prepare aggregate event data, but now we have to actually produce rates. If you are would like to continue on using aggregate event data, consider moving on to 3. Producing Stabilized Rates. If you are interested in using individual, record-level event data, consider also taking a look at 2b. Preparing Individual-Level Event Data."
  },
  {
    "objectID": "tutorial/stab_rates.html",
    "href": "tutorial/stab_rates.html",
    "title": "3. Producing Stabilized Rates",
    "section": "",
    "text": "The final step of a RSTbx workflow is producing stabilized rates!"
  },
  {
    "objectID": "tutorial/stab_rates.html#requirements",
    "href": "tutorial/stab_rates.html#requirements",
    "title": "3. Producing Stabilized Rates",
    "section": "Requirements",
    "text": "Requirements\n\nAggregate event and population data"
  },
  {
    "objectID": "reference/IDP.html",
    "href": "reference/IDP.html",
    "title": "Individual Data Processor",
    "section": "",
    "text": "It is often the case that your data is collected at the individual level. These data will be need to be aggregated to the region (and age group, for age standardized rates) for rate calculations within the Rate Stabilizing Tool. This tool was developed to make that process easier!\n\n\n\n\nAge Stratified : checkbox\n\nShould the output table be stratified by age group?\n\nInput Individual Data : table path\n\nTable with one record for individual event. Each record must contain a Region ID and, if Age Stratified is checked, Age.\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\nAge : field name\n\nName of column which specifies the age of the individual the event occurred to.\n\n\n\n\nInput Population Data : table path\n\nTable with one record for each Region ID OR one record for each Region ID and Age Group combination. Table must an additional column which specifies the Population Count for each Region ID OR Region ID and Age Group combination.\nTable can easily be generated using the Census Data Retriever.\n\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\nPopulation Count : field name\n\nName of column which contains the population of each region OR region-age group combination.\n\nAge Group : string\n\nName of column which specifies age groups.\nThe following are valid age groups: “0-4”, “5-14”, “15-24”, “25-34”, “35-44”, “45-54”, “55-64”, “65-74”, “75-84”, “85up”.\n\n\n\n\nInput Feature : feature path\n\nBoundary file which contains one record for each Region ID.\n\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\n\n\n\nOutput Table : table path\n\nPath of the output table which contains the combined population and aggregated event data.\n\n\n\n\n\n\nScenario 1: I want to generate crude rates for some Michigan event data I have. I first need to aggregate this data (MI_mort_indiv within data.gdb) and combine it with population data from Census Data Retriever (MI_pop within data.gdb).\n\nAge Stratified: Unchecked\nInput Individual Data: data.gdb/MI_mort_indiv\nInput Individual Data Fields:\n\nRegion ID: GEOID\n\nInput Population Data: data.gdb/MI_pop\nInput Population Data Fields:\n\nRegion ID: GEOID\nPopulation Count: PopulationCount\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nOutput Table: some_project.gdb/MI_mort_pop\n\nScenario 2: I want to generate age-adjusted rates for some Michigan event data I have. I first need to aggregate this data (MI_mort_indiv within data.gdb) and combine it with population data from Census Data Retriever (MI_pop_grouped within data.gdb).\n\nAge Stratified: Checked\nInput Individual Data: data.gdb/MI_mort_indiv\nInput Individual Data Fields:\n\nRegion ID: GEOID\nAge: Age\n\nInput Population Data: data.gdb/MI_pop_grouped\nInput Population Data Fields:\n\nRegion ID: GEOID\nPopulation Count: PopulationCount\nAge Group: AgeGroup\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nOutput Table: some_project.gdb/MI_mort_pop"
  },
  {
    "objectID": "reference/IDP.html#parameters",
    "href": "reference/IDP.html#parameters",
    "title": "Individual Data Processor",
    "section": "",
    "text": "Age Stratified : checkbox\n\nShould the output table be stratified by age group?\n\nInput Individual Data : table path\n\nTable with one record for individual event. Each record must contain a Region ID and, if Age Stratified is checked, Age.\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\nAge : field name\n\nName of column which specifies the age of the individual the event occurred to.\n\n\n\n\nInput Population Data : table path\n\nTable with one record for each Region ID OR one record for each Region ID and Age Group combination. Table must an additional column which specifies the Population Count for each Region ID OR Region ID and Age Group combination.\nTable can easily be generated using the Census Data Retriever.\n\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\nPopulation Count : field name\n\nName of column which contains the population of each region OR region-age group combination.\n\nAge Group : string\n\nName of column which specifies age groups.\nThe following are valid age groups: “0-4”, “5-14”, “15-24”, “25-34”, “35-44”, “45-54”, “55-64”, “65-74”, “75-84”, “85up”.\n\n\n\n\nInput Feature : feature path\n\nBoundary file which contains one record for each Region ID.\n\n\n\n\n\n\n\nRegion ID : field name\n\nName of column which uniquely identifies each region.\n\n\n\n\nOutput Table : table path\n\nPath of the output table which contains the combined population and aggregated event data."
  },
  {
    "objectID": "reference/IDP.html#examples",
    "href": "reference/IDP.html#examples",
    "title": "Individual Data Processor",
    "section": "",
    "text": "Scenario 1: I want to generate crude rates for some Michigan event data I have. I first need to aggregate this data (MI_mort_indiv within data.gdb) and combine it with population data from Census Data Retriever (MI_pop within data.gdb).\n\nAge Stratified: Unchecked\nInput Individual Data: data.gdb/MI_mort_indiv\nInput Individual Data Fields:\n\nRegion ID: GEOID\n\nInput Population Data: data.gdb/MI_pop\nInput Population Data Fields:\n\nRegion ID: GEOID\nPopulation Count: PopulationCount\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nOutput Table: some_project.gdb/MI_mort_pop\n\nScenario 2: I want to generate age-adjusted rates for some Michigan event data I have. I first need to aggregate this data (MI_mort_indiv within data.gdb) and combine it with population data from Census Data Retriever (MI_pop_grouped within data.gdb).\n\nAge Stratified: Checked\nInput Individual Data: data.gdb/MI_mort_indiv\nInput Individual Data Fields:\n\nRegion ID: GEOID\nAge: Age\n\nInput Population Data: data.gdb/MI_pop_grouped\nInput Population Data Fields:\n\nRegion ID: GEOID\nPopulation Count: PopulationCount\nAge Group: AgeGroup\n\nInput Feature: data.gdb/MI_carto\nInput Feature Fields:\n\nRegion ID: GEOID\n\nOutput Table: some_project.gdb/MI_mort_pop"
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Reference",
    "section": "",
    "text": "Census Data Retriever\nRetrieving data from the Census can be hard. The CDR aims to simplify that process by doing it for you! Simply specify the survey/census of interest and the geographic unit and the CDR will generate a (optionally, age-stratified) total population table. The CDR can also optionally download Census TIGER or cartographic boundaries.\n\n\nIndividual Data Processor\nIt is often the case that your data is collected at the individual level. These data will be need to be aggregated to the region (and age group, for age standardized rates) for rate calculations within the Rate Stabilizing Tool. This tool was developed to make that process easier!\n\n\nRate Stabilizing Tool\nThe RST offers an easy-to-use interface for the restricted univariate conditional autoregressive (UCAR) model. With the RST, you can generate small area estimates, credible intervals for those estimates, and the maximum credible levels at which these estimates would be considered reliable.\n\n\n\n\n\n\nWe provide example data to help you work through examples within throughout the documentation. You can find all the example data within the data.gdb inside of every release.\n\n\n\n\n\n\n\nmi_carto\nCartographic county boundaries for the state of Michigan.\n\n\nmi_event_indiv\nSimulated individual event table created from 1979 Michigan county myocardial infarcation (ICD-9 code 410.0) death counts.\n\n\nmi_event_agg\nAggregate event table of 1979 Michigan county myocardial infarcation (ICD-9 code 410.0) death counts.\n\n\nmi_event_agg_strat\nAge-stratified aggregate event table of 1979 Michigan county myocardial infarcation (ICD-9 code 410.0) death counts.\n\n\nmi_pop\nTotal population table of Michigan counties in 1979\n\n\nmi_pop_strat\nAge-stratified population table of Michigan counties in 1979\n\n\n\nAll event and population data was downloaded from CDC WONDER’s Compressed Mortality 1979-1998 database."
  },
  {
    "objectID": "reference/index.html#tools",
    "href": "reference/index.html#tools",
    "title": "Reference",
    "section": "",
    "text": "Census Data Retriever\nRetrieving data from the Census can be hard. The CDR aims to simplify that process by doing it for you! Simply specify the survey/census of interest and the geographic unit and the CDR will generate a (optionally, age-stratified) total population table. The CDR can also optionally download Census TIGER or cartographic boundaries.\n\n\nIndividual Data Processor\nIt is often the case that your data is collected at the individual level. These data will be need to be aggregated to the region (and age group, for age standardized rates) for rate calculations within the Rate Stabilizing Tool. This tool was developed to make that process easier!\n\n\nRate Stabilizing Tool\nThe RST offers an easy-to-use interface for the restricted univariate conditional autoregressive (UCAR) model. With the RST, you can generate small area estimates, credible intervals for those estimates, and the maximum credible levels at which these estimates would be considered reliable."
  },
  {
    "objectID": "reference/index.html#example-data",
    "href": "reference/index.html#example-data",
    "title": "Reference",
    "section": "",
    "text": "We provide example data to help you work through examples within throughout the documentation. You can find all the example data within the data.gdb inside of every release.\n\n\n\n\n\n\n\nmi_carto\nCartographic county boundaries for the state of Michigan.\n\n\nmi_event_indiv\nSimulated individual event table created from 1979 Michigan county myocardial infarcation (ICD-9 code 410.0) death counts.\n\n\nmi_event_agg\nAggregate event table of 1979 Michigan county myocardial infarcation (ICD-9 code 410.0) death counts.\n\n\nmi_event_agg_strat\nAge-stratified aggregate event table of 1979 Michigan county myocardial infarcation (ICD-9 code 410.0) death counts.\n\n\nmi_pop\nTotal population table of Michigan counties in 1979\n\n\nmi_pop_strat\nAge-stratified population table of Michigan counties in 1979\n\n\n\nAll event and population data was downloaded from CDC WONDER’s Compressed Mortality 1979-1998 database."
  }
]